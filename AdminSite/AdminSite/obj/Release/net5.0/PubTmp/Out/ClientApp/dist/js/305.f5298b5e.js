"use strict";(self["webpackChunkclientapp"]=self["webpackChunkclientapp"]||[]).push([[305],{4305:function(e,l,a){a.r(l),a.d(l,{default:function(){return h}});var n=a(3396);const u=(0,n._)("strong",null,"Vue Range",-1),t=(0,n._)("small",null,null,-1),m=(0,n._)("p",{class:"text-medium-emphasis small"},[(0,n.Uk)(" Create custom "),(0,n._)("code",null,'<input type="range">'),(0,n.Uk)(" controls with "),(0,n._)("code",null,"<CFormRange>"),(0,n.Uk)(". ")],-1),s=(0,n._)("strong",null,"Vue Range",-1),d=(0,n._)("small",null,"Disabled",-1),o=(0,n._)("p",{class:"text-medium-emphasis small"},[(0,n.Uk)(" Add the "),(0,n._)("code",null,"disabled"),(0,n.Uk)(" boolean attribute on an input to give it a grayed out appearance and remove pointer events. ")],-1),r=(0,n._)("strong",null,"Vue Range",-1),f=(0,n._)("small",null,"Min and max",-1),i=(0,n._)("p",{class:"text-medium-emphasis small"},[(0,n.Uk)(" Range inputs have implicit values for "),(0,n._)("code",null,"min"),(0,n.Uk)(" and "),(0,n._)("code",null,"max"),(0,n.Uk)("â€” "),(0,n._)("code",null,"0"),(0,n.Uk)(" and "),(0,n._)("code",null,"100"),(0,n.Uk)(", respectively. You may specify new values for those using the "),(0,n._)("code",null,"min"),(0,n.Uk)(" and "),(0,n._)("code",null,"max"),(0,n.Uk)(" attributes. ")],-1),p=(0,n._)("strong",null,"Vue Range",-1),_=(0,n._)("small",null,"Steps",-1),c=(0,n._)("p",{class:"text-medium-emphasis small"},[(0,n.Uk)(' By default, range inputs "snap" to integer values. To change this, you can specify a '),(0,n._)("code",null,"step"),(0,n.Uk)(" value. In the example below, we double the number of steps by using "),(0,n._)("code",null,'step="0.5"'),(0,n.Uk)(". ")],-1);function g(e,l,a,g,w,W){const k=(0,n.up)("DocsCallout"),h=(0,n.up)("CCol"),U=(0,n.up)("CCardHeader"),b=(0,n.up)("CFormLabel"),x=(0,n.up)("CFormRange"),R=(0,n.up)("DocsExample"),C=(0,n.up)("CCardBody"),v=(0,n.up)("CCard"),y=(0,n.up)("CRow");return(0,n.wg)(),(0,n.j4)(y,null,{default:(0,n.w5)((()=>[(0,n.Wm)(h,{xs:12},{default:(0,n.w5)((()=>[(0,n.Wm)(k,{name:"Range",href:"forms/range.html"})])),_:1}),(0,n.Wm)(h,{xs:12},{default:(0,n.w5)((()=>[(0,n.Wm)(v,{class:"mb-4"},{default:(0,n.w5)((()=>[(0,n.Wm)(U,null,{default:(0,n.w5)((()=>[u,(0,n.Uk)(),t])),_:1}),(0,n.Wm)(C,null,{default:(0,n.w5)((()=>[m,(0,n.Wm)(R,{href:"forms/range.html"},{default:(0,n.w5)((()=>[(0,n.Wm)(b,{for:"customRange1"},{default:(0,n.w5)((()=>[(0,n.Uk)("Example range")])),_:1}),(0,n.Wm)(x,{id:"customRange1"})])),_:1})])),_:1})])),_:1})])),_:1}),(0,n.Wm)(h,{xs:12},{default:(0,n.w5)((()=>[(0,n.Wm)(v,{class:"mb-4"},{default:(0,n.w5)((()=>[(0,n.Wm)(U,null,{default:(0,n.w5)((()=>[s,(0,n.Uk)(),d])),_:1}),(0,n.Wm)(C,null,{default:(0,n.w5)((()=>[o,(0,n.Wm)(R,{href:"forms/range.html#disabled"},{default:(0,n.w5)((()=>[(0,n.Wm)(b,{for:"disabledRange"},{default:(0,n.w5)((()=>[(0,n.Uk)("Disabled range")])),_:1}),(0,n.Wm)(x,{id:"disabledRange",disabled:""})])),_:1})])),_:1})])),_:1})])),_:1}),(0,n.Wm)(h,{xs:12},{default:(0,n.w5)((()=>[(0,n.Wm)(v,{class:"mb-4"},{default:(0,n.w5)((()=>[(0,n.Wm)(U,null,{default:(0,n.w5)((()=>[r,(0,n.Uk)(),f])),_:1}),(0,n.Wm)(C,null,{default:(0,n.w5)((()=>[i,(0,n.Wm)(R,{href:"forms/range.html#min-and-max"},{default:(0,n.w5)((()=>[(0,n.Wm)(b,{for:"customRange2"},{default:(0,n.w5)((()=>[(0,n.Uk)("Example range")])),_:1}),(0,n.Wm)(x,{id:"customRange2",min:0,max:5,value:"3"})])),_:1})])),_:1})])),_:1})])),_:1}),(0,n.Wm)(h,{xs:12},{default:(0,n.w5)((()=>[(0,n.Wm)(v,{class:"mb-4"},{default:(0,n.w5)((()=>[(0,n.Wm)(U,null,{default:(0,n.w5)((()=>[p,(0,n.Uk)(),_])),_:1}),(0,n.Wm)(C,null,{default:(0,n.w5)((()=>[c,(0,n.Wm)(R,{href:"forms/range.html#steps"},{default:(0,n.w5)((()=>[(0,n.Wm)(b,{for:"customRange3"},{default:(0,n.w5)((()=>[(0,n.Uk)("Example range")])),_:1}),(0,n.Wm)(x,{id:"customRange3",min:0,max:5,step:.5,value:"3"},null,8,["step"])])),_:1})])),_:1})])),_:1})])),_:1})])),_:1})}var w={name:"Range"},W=a(89);const k=(0,W.Z)(w,[["render",g]]);var h=k}}]);
//# sourceMappingURL=305.f5298b5e.js.map